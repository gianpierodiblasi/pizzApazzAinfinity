class Z4Math{static TWO_PI=2*Math.PI;static HALF_PI=Math.PI/2;static GOLD_SECTION=(1+Math.sqrt(5))/2;static SQUARE_GOLD_SECTION=Z4Math.GOLD_SECTION*Z4Math.GOLD_SECTION;static RAD2DEG=180/Math.PI;static DEG2RAD=Math.PI/180;static rad2deg(t){return t*Z4Math.RAD2DEG}static deg2rad(t){return t*Z4Math.DEG2RAD}static distance(t,e,o,s){let i=t-o,r=e-s;return Math.sqrt(i*i+r*r)}static atan(t,e,o,s){let i=Math.atan2(s-e,o-t);return i<0?i+Z4Math.TWO_PI:i}static ripple(t,e,o,s){let i=(o-e)*s*Math.random();return(t+=Math.random()>.5?i:-i)<e?e:t>o?o:t}constructor(){}}class Z4Sign{static POSITIVE=new Z4Sign(1);static NEGATIVE=new Z4Sign(-1);static RANDOM=new Z4Sign(0);sign=0;constructor(t){this.sign=t}next(){switch(this.sign){case 1:case-1:return this.sign;case 0:default:return Math.random()>.5?1:-1;case 2:case-2:return this.sign*=-1,this.sign/2}}static alternate(){return new Z4Sign(-2)}}class Z4RandomValue{value=0;type=0;length=0;step=0;prevRandom=0;controlRandom=0;nextRandom=0;bezierCurve=null;constructor(t,e,o){this.value=t,this.type=e,this.length=o,this.step=0,this.prevRandom=Math.random(),this.controlRandom=1,this.nextRandom=Math.random(),1===this.type&&this.createBezierCurve()}createBezierCurve(){this.bezierCurve=new Bezier(0,this.prevRandom,this.length/2,this.controlRandom,1,this.nextRandom)}next(){switch(this.type){case 0:default:return value*Math.random();case 1:return this.step===this.length?(this.step=0,this.prevRandom=this.nextRandom,this.controlRandom=1===this.controlRandom?0:1,this.nextRandom=Math.random(),this.createBezierCurve()):this.step++,value*this.bezierCurve.get(this.step/this.length).y;case 2:return this.step===this.length?(this.step=0,this.prevRandom=this.nextRandom,this.nextRandom=Math.random()):this.step++,value*((this.nextRandom-this.prevRandom)*this.step/this.length+this.prevRandom);case 3:return this.step===this.length?(this.step=0,this.prevRandom=Math.random()):this.step++,value*this.prevRandom}}static classic(t){return new Z4RandomValue(t,0,0)}static bezier(t,e){return new Z4RandomValue(t,1,e)}static polyline(t,e){return new Z4RandomValue(t,2,e)}static stepped(t,e){return new Z4RandomValue(t,3,e)}}class Z4FancifulValue{constantSign=Z4Sign.RANDOM;constantValue=0;randomSign=Z4Sign.RANDOM;randomValue=Z4RandomValue.classic(0);proportionalSign=Z4Sign.RANDOM;proportionalValue=0;uniformSign=!1;setConstant(t,e){return this.constantSign=t,this.constantValue=e,this}setRandom(t,e){return this.randomSign=t,this.randomValue=e,this}setProportional(t,e){return this.proportionalSign=t,this.proportionalValue=e,this}setUniformSign(t){return this.uniformSign=t,this}next(t){return this.uniformSign?this.constantSign.next()*(this.constantValue+this.randomValue.next()+t*this.proportionalValue):this.constantSign.next()*this.constantValue+this.randomSign.next()*this.randomValue.next()+this.proportionalSign.next()*t*this.proportionalValue}}class Z4Lighting{static NONE=new Z4Lighting;static LIGTHED=new Z4Lighting;static DARKENED=new Z4Lighting;constructor(){}}class Z4Progression{static SPATIAL=new Z4Progression;static TEMPORAL=new Z4Progression;static RELATIVE_TO_PATH=new Z4Progression;static RANDOM=new Z4Progression;constructor(){}}class Z4Color extends Z4AbstractColor{constructor(t,e,o,s){super(t,e,o,s)}static fromARGB(t){return new Z4Color(t>>>24&255,t>>>16&255,t>>>8&255,255&t)}static fromHEX(t,e){let o=new RegExp("^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$","i").exec(t);return new Z4Color(e,parseInt(o[1],16),parseInt(o[2],16),parseInt(o[3],16))}static fromZ4AbstractColors(t,e,o){let s=t.getComponents(),i=e.getComponents();return new Z4Color(parseInt((i[0]-s[0])*o+s[0]),parseInt((i[1]-s[1])*o+s[1]),parseInt((i[2]-s[2])*o+s[2]),parseInt((i[3]-s[3])*o+s[3]))}}class Z4StopColor extends Z4AbstractColor{position=0;constructor(t,e,o,s,i){super(t,e,o,s),this.position=i}getPosition(){return position}setPosition(t){this.position=t}static fromARGB(t,e){return new Z4StopColor(t>>>24&255,t>>>16&255,t>>>8&255,255&t,e)}static fromHEX(t,e,o){let s=new RegExp("^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$","i").exec(t);return new Z4StopColor(e,parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16),o)}}class Z4GradientColor{z4StopColors=new Array;ripple=0;mirrored=!1;constructor(){this.z4StopColors.push(new Z4StopColor(255,255,255,255,0)),this.z4StopColors.push(new Z4StopColor(255,0,0,0,1))}addOrUpdateColor(t,e){let o=this.z4StopColors.find(((e,o,s)=>e.getPosition()===t));return null!==o?o.set(e):this.z4StopColors.push(Z4StopColor.fromARGB(e,t)),this}generateColor(t){return this.addOrUpdateColor(t,this.getZ4ColorAt(t,!1,!1).getARGB())}removeColor(t){return this.z4StopColors=this.z4StopColors.filter(((e,o,s)=>e.getPosition()!==t)),this}move(t,e){let o=this.z4StopColors.find(((e,o,s)=>e.getPosition()===t));return null!==o&&0!==t&&1!==t&&0!==e&&1!==e&&o.setPosition(e),this}setRipple(t){return this.ripple=t,this}setMirrored(t){return this.mirrored=t,this}negative(){return this.z4StopColors.forEach((t=>t.negative())),this}inverted(){return this.z4StopColors.forEach((t=>t.setPosition(1-t.getPosition()))),this}getZ4ColorAt(t,e,o){o&&this.mirrored&&(t=2*(t<.5?t:1-t)),e&&0!==this.ripple&&(t=Z4Math.ripple(t,0,1,this.ripple));let s=t,i=this.z4StopColors.filter(((t,e,o)=>1===s?t.getPosition()<s:t.getPosition()<=s)).reduce(((t,e,o,s)=>null===t?e:t.getPosition()>e.getPosition()?t:e)),r=this.z4StopColors.filter(((t,e,o)=>0===s?t.getPosition()>s:t.getPosition()>=s)).reduce(((t,e,o,s)=>null===t?e:t.getPosition()<e.getPosition()?t:e)),n=(t-i.getPosition())/(r.getPosition()-i.getPosition());return Z4Color.fromZ4AbstractColors(i,r,n)}getLinearGradient(t,e,o,s,i){let r=t.createLinearGradient(e,o,s,i);return this.z4StopColors.forEach(((t,e,o)=>r.addColorStop(t.getPosition(),t.getHEX()))),r}getRadialGradient(t,e,o,s,i,r,n){let a=t.createRadialGradient(e,o,s,i,r,n);return this.z4StopColors.forEach(((t,e,o)=>a.addColorStop(t.getPosition(),t.getHEX()))),a}getConicGradient(t,e,o,s){let i=t.createConicGradient(s,e,o);return this.z4StopColors.forEach(((t,e,o)=>i.addColorStop(t.getPosition(),t.getHEX()))),i}}
//# sourceMappingURL=bundle.min.js.map